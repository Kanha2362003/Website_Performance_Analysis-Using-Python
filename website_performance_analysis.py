# -*- coding: utf-8 -*-
"""Website Performance Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1loDxkTfr91MRAsb25QU140VTi8Nrfxfm
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("/content/data-export (1).csv")

df.head()

df.columns = df.iloc[0]
df.head()

df = df.drop(index = 0).reset_index(drop = True)
df.columns = ['Channel_Group','DateHour','Users','Sessions','Engaged_Sessions', 'AverageEngagement Time per session','Engaged Sessions per users', 'Events per session','Engagement_Rate','Event_Count']

df.head()

df.info()

df["DateHour"] = pd.to_datetime(df["DateHour"], format="%Y%m%d%H", errors = 'coerce')

df.info()

df.head()

print(df[df["DateHour"].isna()])

numeric_cols = df.columns.drop(['Channel_Group','DateHour'])
df[numeric_cols] = df[numeric_cols].apply(pd.to_numeric, errors = 'coerce')
df["Hour"] = df["DateHour"].dt.hour

df.head()

df.info()

df.describe()

sns.set(style = "whitegrid")

plt.figure(figsize = (10,5))
df.groupby("DateHour")[["Sessions","Users"]].sum().plot(ax = plt.gca())
plt.title(" Daily Users and Sessions")
plt.xlabel("DateHour")
plt.ylabel("Count")
plt.legend()
plt.show()

plt.figure(figsize =(8,5))
sns.barplot(data = df, x= "Channel_Group", y ="Users",
            estimator = np.sum ,palette ="viridis")
plt.title("Total Users by Channel Group")
plt.xticks(rotation= 75)
plt.show()

plt.figure(figsize =(8,5))
sns.barplot(data = df, x= "Channel_Group", y ="AverageEngagement Time per session",
            estimator = np.mean ,palette ="magma")
plt.title("Avg Engagement Time by Channel")
plt.xticks(rotation= 75)
plt.show()

df.head()

plt.figure(figsize =(8,5))
sns.boxplot(data = df, x= "Channel_Group", y ="Engagement_Rate",
             palette ="coolwarm")
plt.title("Engagement Rate Distribution by Channel")
plt.xticks(rotation= 65)
plt.show()

session_df = df.groupby("Channel_Group")[["Sessions", "Engaged_Sessions"]].sum().reset_index()
session_df["Non-Engaged Sessions"] = session_df["Sessions"]- session_df["Engaged_Sessions"]
session_df_melted = session_df.melt(id_vars = "Channel_Group", value_vars = ["Engaged_Sessions", "Non-Engaged Sessions"])

plt.figure(figsize =(8,5))
sns.barplot(data =session_df_melted , x= "Channel_Group", y ="value",
             hue ="variable")
plt.title("Engaged Vs Non-Engaged Session")
plt.xticks(rotation= 65)
plt.show()

heatmap_data = df.groupby(["Hour","Channel_Group"])["Sessions"].sum().unstack().fillna(0)
plt.figure(figsize = (12,6))
sns.heatmap(heatmap_data, cmap = "YlGnBu", linewidth = 0.5, annot = True, fmt = '.0f')
plt.title("Traffic by Hour and Channel")
plt.xlabel("Channel Group")
plt.ylabel("Hour of Day")
plt.show()

df_plot = df.groupby("DateHour")[["Engagement_Rate","Sessions"]].mean().reset_index()

plt.figure(figsize =(10,5))
plt.plot(df_plot["DateHour"], df_plot["Engagement_Rate"],label = "Engagement Rate", color ="green")
plt.plot(df_plot["DateHour"],df_plot["Sessions"], label ="Sessions", color = "blue")
plt.title("Engagement Rate Vs Sessions Over Time")
plt.xlabel("DateHour")
plt.legend()
plt.grid(True)
plt.show()

